var h={},L=(y,C,T)=>(h.__chunk_8471=(E,u,a)=>{"use strict";a.d(u,{DT:()=>p,mU:()=>g});var A=a(974);let l={allowedOrigins:["*"],allowedMethods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"],allowCredentials:!1};function g(t,e={}){let s={...l,...e},r=t.headers.get("origin")||"*",n=s.allowedOrigins.includes("*")||s.allowedOrigins.includes(r)?r:s.allowedOrigins[0];return t.headers.set("Access-Control-Allow-Origin",n),t.headers.set("Access-Control-Allow-Methods",s.allowedMethods.join(", ")),t.headers.set("Access-Control-Allow-Headers",s.allowedHeaders.join(", ")),s.allowCredentials&&t.headers.set("Access-Control-Allow-Credentials","true"),t}function p(t={}){let e={...l,...t};return new A.Rp(null,{status:200,headers:{"Access-Control-Allow-Origin":e.allowedOrigins[0],"Access-Control-Allow-Methods":e.allowedMethods.join(", "),"Access-Control-Allow-Headers":e.allowedHeaders.join(", "),"Access-Control-Max-Age":"86400"}})}},h.__chunk_3993=(E,u,a)=>{"use strict";a.d(u,{_:()=>p});class A{constructor(e){this.config=e}async query(e,s=[]){try{let{accountId:r,apiToken:n,databaseId:i}=this.config;if(!r||!n||!i)return{success:!1,error:"Missing Cloudflare D1 credentials"};let c=e;s.length>0&&s.forEach((o,w)=>{let D,O=`$${w+1}`;D=o==null?"NULL":typeof o=="string"?`'${o.replace(/'/g,"''")}'`:typeof o=="number"?o.toString():typeof o=="boolean"?o?"1":"0":`'${String(o).replace(/'/g,"''")}'`,c=c.replace(RegExp(O,"g"),D)});let f=`https://api.cloudflare.com/client/v4/accounts/${r}/d1/database/${i}/query`,_=await fetch(f,{method:"POST",headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json"},body:JSON.stringify({sql:c})});if(!_.ok){let o=await _.json();return{success:!1,error:`D1 API Error: ${JSON.stringify(o)}`}}let d=await _.json();return{success:!0,data:d.result?.[0]?.results||[],meta:{changes:d.result?.[0]?.changes||0,last_row_id:d.result?.[0]?.last_row_id||0,duration:d.result?.[0]?.duration||0}}}catch(r){return{success:!1,error:r instanceof Error?r.message:"Unknown error occurred"}}}}class l{constructor(e){this.config=e}async query(e,s=[]){try{return{success:!1,error:"PostgreSQL provider not implemented yet"}}catch(r){return{success:!1,error:r instanceof Error?r.message:"PostgreSQL query failed"}}}async close(){}}class g{constructor(e){this.config=e}async query(e,s=[]){try{return{success:!1,error:"MySQL provider not implemented yet"}}catch(r){return{success:!1,error:r instanceof Error?r.message:"MySQL query failed"}}}async close(){}}class p{static createProvider(e,s){switch(e){case"cloudflare-d1":return new A(s);case"postgresql":return new l(s);case"mysql":return new g(s);default:throw Error(`Unsupported database type: ${e}`)}}static getDefaultProvider(e){let s=typeof process<"u"&&process.env.APP_ENV==="PRODUCTION"||!0,r=process.env.DATABASE_TYPE||"cloudflare-d1";if(s){if(!e?.DB){console.warn('D1 binding "env.DB" is missing, falling back to API connection');let c={accountId:process.env.CLOUDFLARE_ACCOUNT_ID,apiToken:process.env.CLOUDFLARE_API_TOKEN_D1,databaseId:process.env.CLOUDFLARE_D1_DATABASE_ID,region:process.env.DATABASE_REGION};return this.createProvider(r,c)}let i={binding:e.DB,accountId:process.env.CLOUDFLARE_ACCOUNT_ID,databaseId:process.env.CLOUDFLARE_D1_DATABASE_ID,region:process.env.DATABASE_REGION};return this.createProvider(r,i)}let n={accountId:process.env.CLOUDFLARE_ACCOUNT_ID,apiToken:process.env.CLOUDFLARE_API_TOKEN_D1,databaseId:process.env.CLOUDFLARE_D1_DATABASE_ID,connectionString:process.env.DATABASE_URL,region:process.env.DATABASE_REGION};return this.createProvider(r,n)}}},h);export{L as __getNamedExports};
